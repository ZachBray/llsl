# {{{name.original}}}

Version: {{{version}}}

{{{description}}}

## Table of contents

- [Codecs](#codecs){{#each codecs}}
  - [{{{name.original}}}](#{{{name.kebab_case}}}){{/each}}
- [Enumerations](#enumerations){{#each enums}}
  - [{{{name.original}}}](#{{{name.kebab_case}}}){{/each}}

## Codecs

The protocol uses the following codecs to represent messages or message parts.

{{#each codecs ~}}

### {{{name.original}}}

{{{description}}}

```{{{diagram}}}```

| Field | Type | Offset (bits) | Size (bits) | Description |
| :---- | :--- | ------------: | ----------: | :---------- |
{{#each fields ~}}
{{#if type_ref ~}}
| <ins>**{{{diagram_info.alias}}}**</ins>{{{diagram_info.alias_remainder}}} | [{{{type_ref.original}}}](#{{{type_ref.kebab_case}}}) | `{{{diagram_info.padded_offset_bits}}}` | `{{{diagram_info.bits}}}` | {{{description}}} |
{{else ~}}
| <ins>**{{{diagram_info.alias}}}**</ins>{{{diagram_info.alias_remainder}}} | | `{{{diagram_info.padded_offset_bits}}}` | `{{{diagram_info.bits}}}` | {{{description}}} |
{{/if ~}}
{{/each}}

{{/each ~}}


## Enumerations

The protocol uses the following values to represent enumeration values.

{{#each enums ~}}
### {{{name.original}}}

{{{description}}}

| Type | Value | Description |
| :--- | ----: | :---------- |
{{#each cases ~}}
| _{{{name.original}}}_ | `{{{value.hex}}}` | {{{description}}} |
{{/each}}

{{/each ~}}
