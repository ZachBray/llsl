/** This is generated code */
{{#each imports ~}}
import {{{pascal_case}}} from "./{{{camel_case}}}.js";
{{/each}}

const {{{codec.name.pascal_case}}} = () => {
{{#each codec.fields }}
  let {{{name.camel_case}}}Schema = {
    name: "{{{name.original}}}",
    offsetInBytes: {{{location.offset_bytes}}},
    bitMask: {{{location.bit_mask.binary}}}, // {{{location.bit_mask.original}}}
    shift: {{{location.shift}}},
  };
{{/each}}

  let buffer;
  let codecOffsetInBytes = 0;

  return {
    wrap: (newBuffer, newOffsetInBytes) => {
      buffer = newBuffer;
      codecOffsetInBytes = newOffsetInBytes;
    },
{{#each codec.fields}}
    write{{{name.pascal_case}}}: (value) => {
      buffer.write{{{type_info.kind.pascal_case}}}({{{name.camel_case}}}Schema, codecOffsetInBytes, value);
    },

    read{{{name.pascal_case}}}: () => {
      return buffer.read{{{type_info.kind.pascal_case}}}({{{name.camel_case}}}Schema, codecOffsetInBytes);
    },
{{/each}}
  };
};

export default {{{codec.name.pascal_case}}}();
